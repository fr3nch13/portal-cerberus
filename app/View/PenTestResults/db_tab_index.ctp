<?php 

$th = array();
$th['PenTestResult.id'] = array('content' => __('ID'), 'options' => array('sort' => 'PenTestResult.id'));
if(!$stripped) $th['PenTestResult.Division'] = array('content' => __('Division'));
if(!$stripped) $th['PenTestResult.Branch'] = array('content' => __('Branch'));
$th['PenTestResult.FismaSystem'] = array('content' => __('FISMA System'));
//$th['PenTestReport.name'] = array('content' => __('Report'), 'options' => array('sort' => 'PenTestReport.name'));
if(!$stripped) $th['PenTestResult.reports_organization_id'] = array('content' => __('Organization'), 'options' => array('sort' => 'ReportsOrganization.name'));
if(!$stripped) $th['PenTestResult.host_description'] = array('content' => __('Host Description'), 'options' => array('sort' => 'PenTestResult.host_description'));
$th['PenTestResult.ip_address'] = array('content' => __('Ip Address'), 'options' => array('sort' => 'PenTestResult.ip_address'));
$th['PenTestResult.host_name'] = array('content' => __('Hostname'), 'options' => array('sort' => 'PenTestResult.host_name'));
if(!$stripped) $th['PenTestResult.mac_address'] = array('content' => __('Mac Address'), 'options' => array('sort' => 'PenTestResult.mac_address'));
if(!$stripped) $th['PenTestResult.port'] = array('content' => __('Port'), 'options' => array('sort' => 'PenTestResult.port'));
if(!$stripped) $th['PenTestResult.service'] = array('content' => __('Service'), 'options' => array('sort' => 'PenTestResult.service'));
$th['PenTestResult.eol_software_id'] = array('content' => __('Software/Vulnerability'), 'options' => array('sort' => 'EolSoftware.name'));
$th['PenTestResult.software'] = array('content' => __('Application'), 'options' => array('sort' => 'PenTestResult.software'));
$th['PenTestResult.tickets'] = array('content' => __('Tickets'), 'options' => array('sort' => 'PenTestResult.tickets'));
$th['PenTestResult.waiver'] = array('content' => __('Waivers'), 'options' => array('sort' => 'PenTestResult.waiver'));
$th['PenTestResult.changerequest'] = array('content' => __('CR IDs'), 'options' => array('sort' => 'PenTestResult.changerequest'));
if(!$stripped) $th['PenTestResult.cve'] = array('content' => __('CVE'), 'options' => array('sort' => 'PenTestResult.cve'));
if(!$stripped) $th['PenTestResult.netbios'] = array('content' => __('NetBIOS'), 'options' => array('sort' => 'PenTestResult.netbios'));
$th['PenTestResult.reports_severity_id'] = array('content' => __('Severity'), 'options' => array('sort' => 'PenTestResult.reports_severity_id'));
if(!$stripped) $th['PenTestResult.reports_remediation_id'] = array('content' => __('Remediation'), 'options' => array('sort' => 'PenTestResult.reports_remediation_id'));
if(!$stripped) $th['PenTestResult.reports_verification_id'] = array('content' => __('Verification'), 'options' => array('sort' => 'PenTestResult.reports_verification_id'));
$th['PenTestResult.reports_status_id'] = array('content' => __('Status'), 'options' => array('sort' => 'PenTestResult.reports_status_id'));
$th['PenTestResult.status_date'] = array('content' => __('Status Changed Date'), 'options' => array('sort' => 'PenTestResult.status_date' ));
if(!$stripped) $th['PenTestResult.reports_assignable_party_id'] = array('content' => __('Assignable Party'), 'options' => array('sort' => 'PenTestResult.reports_assignable_party_id'));
$th['PenTestResult.reported_to_ic_date'] = array('content' => __('Reported to IC'), 'options' => array('sort' => 'PenTestResult.reported_to_ic_date'));
$th['PenTestResult.resolved_by_date'] = array('content' => __('Must be Resolved By'), 'options' => array('sort' => 'PenTestResult.resolved_by_date'));
if(!$stripped) $th['PenTestResult.verification_date'] = array('content' => __('Verified Date'), 'options' => array('sort' => 'PenTestResult.verification_date' ));
if(!$stripped) $th['PenTestResult.remediation_date'] = array('content' => __('Remediated Date'), 'options' => array('sort' => 'PenTestResult.remediation_date' ));
if(!$stripped) $th['PenTestResult.action_date'] = array('content' => __('Action Date'), 'options' => array('sort' => 'PenTestResult.action_date' ));
if(!$stripped) $th['PenTestResult.modified'] = array('content' => __('Modified'), 'options' => array('sort' => 'PenTestResult.modified' ));
if(!$stripped) $th['PenTestResult.created'] = array('content' => __('Created'), 'options' => array('sort' => 'PenTestResult.created' ));

$thresholdNow = time();
$thresholdSoon = strtotime('+10 days');
$td = array();
foreach ($pen_test_results as $i => $pen_test_result)
{
	$branch = array();
	$division = array();
	if(isset($pen_test_result['FismaInventories']) and $pen_test_result['FismaInventories'])
	{
		foreach($pen_test_result['FismaInventories'] as $fismaInventory)
		{
			if(isset($fismaInventory['FismaSystem']['OwnerContact']['Sac']['Branch']))
			{
				$branchId = $fismaInventory['FismaSystem']['OwnerContact']['Sac']['Branch']['id'];
				$branch[$branchId] = $fismaInventory['FismaSystem']['OwnerContact']['Sac']['Branch']['shortname'];
			}
			if(isset($fismaInventory['FismaSystem']['OwnerContact']['Sac']['Branch']['Division']))
			{
				$divisionId = $fismaInventory['FismaSystem']['OwnerContact']['Sac']['Branch']['Division']['id'];
				$division[$divisionId] = $fismaInventory['FismaSystem']['OwnerContact']['Sac']['Branch']['Division']['shortname'];
			}
		}
	}
	$branch = implode('; ', $branch);
	$division = implode('; ', $division);
	
	$fisma_system = array();
	if(isset($pen_test_result['FismaInventories']) and $pen_test_result['FismaInventories'])
	{
		foreach($pen_test_result['FismaInventories'] as $fismaInventory)
		{
			if(isset($fismaInventory['FismaSystem']))
			{
				$fisma_systemId = $fismaInventory['FismaSystem']['id'];
				$fisma_system[$fisma_systemId] = $fismaInventory['FismaSystem']['name'];
			}
		}
	}
	$fisma_system = implode(', ', $fisma_system);
	
	$highlightDueDate = false;
	if(isset($pen_test_result['ReportsStatus']['name'])
		and $this->Common->slugify($pen_test_result['ReportsStatus']['name']) == 'open')
	{
		$resolvedByDate = strtotime($pen_test_result['PenTestResult']['resolved_by_date']);
		if($resolvedByDate <= $thresholdNow)
			$highlightDueDate = 'highlight-red';
		elseif($resolvedByDate <= $thresholdSoon)
			$highlightDueDate = 'highlight-yellow';
	}
	
	$td[$i] = array();
	$td[$i]['PenTestResult.id'] = $pen_test_result['PenTestResult']['id'];
	if(!$stripped)$td[$i]['PenTestResult.Division'] = $division;
	if(!$stripped)$td[$i]['PenTestResult.Branch'] = $branch;
	$td[$i]['PenTestResult.FismaSystem'] = $fisma_system;
//	$td[$i]['PenTestReport.name'] = $pen_test_result['PenTestReport']['name'];
	if(!$stripped)$td[$i]['PenTestResult.reports_organization_id'] = $pen_test_result['ReportsOrganization']['name'];
	if(!$stripped)$td[$i]['PenTestResult.host_description'] = $pen_test_result['PenTestResult']['host_description'];
	$td[$i]['PenTestResult.ip_address'] = $pen_test_result['PenTestResult']['ip_address'];
	$td[$i]['PenTestResult.host_name'] = $pen_test_result['PenTestResult']['host_name'];
	if(!$stripped)$td[$i]['PenTestResult.mac_address'] = $pen_test_result['PenTestResult']['mac_address'];
	if(!$stripped)$td[$i]['PenTestResult.port'] = $pen_test_result['PenTestResult']['port'];
	if(!$stripped)$td[$i]['PenTestResult.service'] = $pen_test_result['PenTestResult']['service'];
	$td[$i]['PenTestResult.eol_software_id'] = $pen_test_result['EolSoftware']['name'];
	$td[$i]['PenTestResult.software'] = $pen_test_result['PenTestResult']['software'];
	$td[$i]['PenTestResult.tickets'] = $this->Local->ticketLinks($pen_test_result['PenTestResult']['tickets']);
	$td[$i]['PenTestResult.waiver'] = $this->Local->waiverLinks($pen_test_result['PenTestResult']['waiver']);
	$td[$i]['PenTestResult.changerequest'] = $this->Local->crLinks($pen_test_result['PenTestResult']['changerequest']);
	if(!$stripped) $td[$i]['PenTestResult.cve'] = $pen_test_result['PenTestResult']['cve'];
	if(!$stripped) $td[$i]['PenTestResult.netbios'] = $pen_test_result['PenTestResult']['netbios'];
	$td[$i]['PenTestResult.reports_severity_id'] = $pen_test_result['ReportsSeverity']['name'];
	if(!$stripped)$td[$i]['PenTestResult.reports_remediation_id'] = $pen_test_result['ReportsRemediation']['name'];
	if(!$stripped)$td[$i]['PenTestResult.reports_verification_id'] = $pen_test_result['ReportsVerification']['name'];
	$td[$i]['PenTestResult.reports_status_id'] = $pen_test_result['ReportsStatus']['name'];
	$td[$i]['PenTestResult.status_date'] = $this->Wrap->niceTime($pen_test_result['PenTestResult']['status_date']);
	if(!$stripped) $td[$i]['PenTestResult.reports_assignable_party_id'] = $pen_test_result['ReportsAssignableParty']['name'];
	$td[$i]['PenTestResult.reported_to_ic_date'] = array($this->Wrap->niceDay($pen_test_result['PenTestResult']['reported_to_ic_date']));
	$td[$i]['PenTestResult.resolved_by_date'] = array($this->Wrap->niceDay($pen_test_result['PenTestResult']['resolved_by_date']), array('class' => $highlightDueDate));
	if(!$stripped)$td[$i]['PenTestResult.verification_date'] = $this->Wrap->niceDay($pen_test_result['PenTestResult']['verification_date']);
	if(!$stripped)$td[$i]['PenTestResult.remediation_date'] = $this->Wrap->niceDay($pen_test_result['PenTestResult']['remediation_date']);
	if(!$stripped)$td[$i]['PenTestResult.action_date'] = $this->Wrap->niceDay($pen_test_result['PenTestResult']['action_date']);
	if(!$stripped)$td[$i]['PenTestResult.modified'] = $this->Wrap->niceTime($pen_test_result['PenTestResult']['modified']);
	if(!$stripped)$td[$i]['PenTestResult.created'] = $this->Wrap->niceTime($pen_test_result['PenTestResult']['created']);
}

if($stripped)
{
	echo $this->element('Utilities.table', array(
		'th' => $th,
		'td' => $td,
		'table_caption' => __('Highlights - Red: Open/past resolved by date - Yellow: Open/resolved by date within 10 days from now.'),
		'table_stripped' => true,
		'table_widget_options' => array(
			'setup' => "
				self.element.find('td.highlight-red').parent().addClass('highlight-red');
				self.element.find('td.highlight-yellow').parent().addClass('highlight-yellow');
			"
		),
	));
}
else
{
	echo $this->element('Utilities.page_index', array(
		'page_title' => __('All Results'),
		'th' => $th,
		'td' => $td,
		'table_caption' => __('Highlights - Red: Open/past resolved by date - Yellow: Open/resolved by date within 10 days from now.'),
		'table_widget_options' => array(
			'setup' => "
				self.element.find('td.highlight-red').parents('tr').addClass('highlight-red');
				self.element.find('td.highlight-yellow').parents('tr').addClass('highlight-yellow');
			"
		),
	));
}