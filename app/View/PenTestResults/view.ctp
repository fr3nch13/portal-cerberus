<?php 
$page_options = array();
$page_options[] = $this->Html->link(__('Edit'), array('action' => 'edit', $pen_test_result['PenTestResult']['id'], 'admin' => false));

$port = array();
if($pen_test_result['PenTestResult']['port']) $port[] = $pen_test_result['PenTestResult']['port'];
if($pen_test_result['PenTestResult']['service']) $port[] = $pen_test_result['PenTestResult']['service'];
$port = implode('/', $port);

$details_blocks = array();

$pen_test_result = $this->ReportResults->addFismaSystemInfo($pen_test_result);

$details_blocks[1][1] = array(
	'title' => __('Host Details'),
	'details' => array(
		array('name' => __('Organization'), 'value' => $pen_test_result['ReportsOrganization']['name']),
		array('name' => __('Host Description'), 'value' => $pen_test_result['PenTestResult']['host_description']),
		array('name' => __('IP Address'), 'value' => $pen_test_result['PenTestResult']['ip_address']),
		array('name' => __('Hostname'), 'value' => $pen_test_result['PenTestResult']['host_name']),
		array('name' => __('MAC Address'), 'value' => $pen_test_result['PenTestResult']['mac_address']),
		array('name' => __('Asset Tag'), 'value' => $pen_test_result['PenTestResult']['asset_tag']),
		array('name' => __('NetBIOS'), 'value' => $pen_test_result['PenTestResult']['netbios']),
		array('name' => __('Port'), 'value' => $port),
		array('name' => __('Divisions'), 'value' => $pen_test_result['division_links']),
		array('name' => __('Branches'), 'value' => $pen_test_result['branch_links']),
		array('name' => __('FISMA Systems'), 'value' => $pen_test_result['fisma_system_links']),
		array('name' => __('FISMA Inventories'), 'value' => str_replace(',', '<br />', $pen_test_result['fisma_inventory_links'])),
	)
);

$details_blocks[1][2] = array(
	'title' => __('Result Details'),
	'details' => array(
		array('name' => __('Ticket ID'), 'value' => $pen_test_result['PenTestResult']['ticket_id']),
		array('name' => __('Software/Vulnerability'), 'value' => $this->Html->link($pen_test_result['EolSoftware']['name'], array('controller' => 'eol_softwares', 'action' => 'view', $pen_test_result['EolSoftware']['id']))),
		array('name' => __('Severity'), 'value' => $pen_test_result['ReportsSeverity']['name']),
		array('name' => __('Application'), 'value' => $pen_test_result['PenTestResult']['software']),
		array('name' => __('Nessus'), 'value' => $this->Common->yesNo($pen_test_result['PenTestResult']['nessus'])),
		array('name' => __('CVE'), 'value' => $pen_test_result['PenTestResult']['cve']),
		array('name' => __('Tickets'), 'value' => $this->Local->ticketLinks($pen_test_result['PenTestResult']['tickets'])),
		array('name' => __('Waivers'), 'value' => $this->Local->waiverLinks($pen_test_result['PenTestResult']['waiver'])),
		array('name' => __('CR IDs'), 'value' => $this->Local->crLinks($pen_test_result['PenTestResult']['changerequest'])),
		array('name' => __('Status'), 'value' => $pen_test_result['ReportsStatus']['name']),
		array('name' => __('Remediation'), 'value' => $pen_test_result['ReportsRemediation']['name']),
		array('name' => __('Verification'), 'value' => $pen_test_result['ReportsVerification']['name']),
		array('name' => __('Assignable Party'), 'value' => $pen_test_result['ReportsAssignableParty']['name']),
	)
);


$remediated_by = false;
if($pen_test_result['ReportsRemediationUser']['name'])
	$remediated_by = $this->Html->link($pen_test_result['ReportsRemediationUser']['name'], array('controller' => 'users', 'action' => 'view', $pen_test_result['ReportsRemediationUser']['id']));

$verified_by = false;
if($pen_test_result['ReportsVerificationUser']['name'])
	$verified_by = $this->Html->link($pen_test_result['ReportsVerificationUser']['name'], array('controller' => 'users', 'action' => 'view', $pen_test_result['ReportsVerificationUser']['id']));
elseif($pen_test_result['PenTestResult']['verified_by'])
	$verified_by = $pen_test_result['PenTestResult']['verified_by'];

$status_changed_by = false;
if($pen_test_result['ReportsStatusUser']['name'])
	$status_changed_by = $this->Html->link($pen_test_result['ReportsStatusUser']['name'], array('controller' => 'users', 'action' => 'view', $pen_test_result['ReportsStatusUser']['id']));


$details_blocks[1][3] = array(
	'title' => __('Milestones'),
	'details' => array(
		array('name' => __('Created By'), 'value' => $this->Html->link($pen_test_result['PenTestResultAddedUser']['name'], array('controller' => 'users', 'action' => 'view', $pen_test_result['PenTestResultAddedUser']['id']))),
		array('name' => __('Created Date'), 'value' => $this->Wrap->niceTime($pen_test_result['PenTestResult']['created'])),
		array('name' => __('Modified By'), 'value' => $this->Html->link($pen_test_result['PenTestResultModifiedUser']['name'], array('controller' => 'users', 'action' => 'view', $pen_test_result['PenTestResultModifiedUser']['id']))),
		array('name' => __('Modified Date'), 'value' => $this->Wrap->niceTime($pen_test_result['PenTestResult']['modified'])),
		array('name' => __('Must be Resolved By'), 'value' => $this->Wrap->niceDay($pen_test_result['PenTestResult']['resolved_by_date'])),
		array('name' => __('Action Taken'), 'value' => $pen_test_result['PenTestResult']['action_taken']),
		array('name' => __('Action Date'), 'value' => $this->Wrap->niceDay($pen_test_result['PenTestResult']['action_date'])),
		array('name' => __('Status Changed By'), 'value' => $status_changed_by),
		array('name' => __('Status Date'), 'value' => $this->Wrap->niceDay($pen_test_result['PenTestResult']['status_date'])),
		array('name' => __('Remediated By'), 'value' => $remediated_by),
		array('name' => __('Remediated Date'), 'value' => $this->Wrap->niceDay($pen_test_result['PenTestResult']['remediation_date'])),
		array('name' => __('Verified By'), 'value' => $verified_by),
		array('name' => __('Verified Date'), 'value' => $this->Wrap->niceDay($pen_test_result['PenTestResult']['verification_date'])),
	)
);

$stats = array();
$tabs = array();
$tabCount = 0;

$tabs['description'] = array(
	'id' => 'description',
	'name' => __('Detailed Description'),
	'content' => $this->Wrap->descView($pen_test_result['PenTestResult']['description']),
);

$tabs['action_recommended'] = array(
	'id' => 'action_recommended',
	'name' => __('Recommended Action'),
	'content' => $this->Wrap->descView($pen_test_result['PenTestResult']['action_recommended']),
);

$tabs['comments'] = array(
	'id' => 'comments',
	'name' => __('Comments'),
	'content' => $this->Wrap->descView("(Please explain why it's False positive, Acceptable Risk or Action(s) taken)\n\n". $pen_test_result['PenTestResult']['comments']),
);

$tabs['notes'] = array(
	'id' => 'notes',
	'name' => __('Notes'),
	'content' => $this->Wrap->descView($pen_test_result['PenTestResult']['notes']),
);

$tabs['pen_test_reports'] = $stats['pen_test_reports'] = array(
	'id' => 'pen_test_reports',
	'name' => __('Pen Test Reports'),
	'ajax_url' => array('controller' => 'pen_test_reports', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
$tabs['fov_results'] = $stats['fov_results'] = array(
	'id' => 'fov_results',
	'name' => __('FOV Results'), 
	'ajax_url' => array('controller' => 'fov_results', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
$tabs['us_results'] = $stats['us_results'] = array(
	'id' => 'us_results',
	'name' => __('US Results'), 
	'ajax_url' => array('controller' => 'us_results', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
$tabs['eol_results'] = $stats['eol_results'] = array(
	'id' => 'eol_results',
	'name' => __('EOL Results'), 
	'ajax_url' => array('controller' => 'eol_results', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
$tabs['pen_test_results'] = $stats['pen_test_results'] = array(
	'id' => 'pen_test_results',
	'name' => __('Pen Test Results'), 
	'ajax_url' => array('controller' => 'pen_test_results', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
$tabs['high_risk_results'] = $stats['high_risk_results'] = array(
	'id' => 'high_risk_results',
	'name' => __('High Risk Results'), 
	'ajax_url' => array('controller' => 'high_risk_results', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
if($this->Wrap->roleCheck(array('admin')))
{
	$tabs['subnets'] = $stats['subnets'] = array(
		'id' => 'subnets',
		'name' => __('Subnets'), 
		'ajax_url' => array('controller' => 'subnet_members', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => true),
	);
}
else
{
	$tabs['subnets'] = $stats['subnets'] = array(
		'id' => 'subnets',
		'name' => __('Subnets'), 
		'ajax_url' => array('controller' => 'subnet_members', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
	);
}
$tabs['change_log'] = $stats['change_log'] = array(
	'id' => 'change_log',
	'name' => __('Change Logs'), 
	'ajax_url' => array('controller' => 'pen_test_result_logs', 'action' => 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);
$tabs['tags'] = $stats['tags'] = array(
	'id' => 'tags',
	'name' => __('Tags'), 
	'ajax_url' => array('plugin' => 'tags', 'controller' => 'tags', 'action' => 'tagged', 'pen_test_result', $pen_test_result['PenTestResult']['id'], 'admin' => false),
);

echo $this->element('Utilities.page_view_columns', array(
	'page_title' => __('%s: #%s', __('Pen Test Result'), $pen_test_result['PenTestResult']['id']),
	'page_options' => $page_options,
	'details_title' => __('Details'),
	'details_blocks' => $details_blocks,
	'stats' => $stats,
	'tabs_id' => 'tabs',
	'tabs' => $tabs,
));